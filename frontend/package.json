{
    "name": "valorant-map-picker",
    "version": "0.1.0",
    "private": true,
    "dependencies": {
        "@testing-library/jest-dom": "^5.16.5",
        "@testing-library/react": "^13.4.0",
        "@testing-library/user-event": "^13.5.0",
        "axios": "^1.3.4",
        "framer-motion": "^10.0.1",
        "lodash": "^4.17.21",
        "lodash.debounce": "^4.0.8",
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "react-icons": "^4.7.1",
        "react-intersection-observer": "^9.4.3",
        "react-scripts": "5.0.1",
        "styled-components": "^5.3.6",
        "web-vitals": "^2.1.4"
    },
    "scripts": {
        "start": "react-scripts start",
        "build": "react-scripts build",
        "test": "react-scripts test",
        "test:coverage": "react-scripts test --coverage --watchAll=false",
        "test:perf": "react-scripts test --testMatch=\"**/*.perf.js\" --env=jsdom",
        "test:docker": "docker build -f Dockerfile.test -t valomap-test . && docker run --rm valomap-test",
        "test:docker:coverage": "docker build -f Dockerfile.test -t valomap-test . && docker run --rm -e TEST_TYPE=coverage valomap-test",
        "test:docker:perf": "docker build -f Dockerfile.test -t valomap-test . && docker run --rm -e TEST_TYPE=perf valomap-test",
        "test:docker:internal": "if [ \"$TEST_TYPE\" = \"coverage\" ]; then npm run test:docker:internal:coverage; elif [ \"$TEST_TYPE\" = \"perf\" ]; then npm run test:docker:internal:perf; else npm run test:docker:internal:unit; fi",
        "test:docker:internal:unit": "CI=true react-scripts test --no-watch",
        "test:docker:internal:coverage": "CI=true react-scripts test --coverage --watchAll=false",
        "test:docker:internal:perf": "CI=true react-scripts test --testMatch=\"**/*.perf.js\" --env=jsdom --no-watch",
        "test:compose": "docker-compose -f docker-compose.test.yml up test --build",
        "test:compose:coverage": "docker-compose -f docker-compose.test.yml up test-coverage --build",
        "test:compose:perf": "docker-compose -f docker-compose.test.yml up test-perf --build",
        "eject": "react-scripts eject",
        "lint": "eslint src/**/*.js",
        "format": "prettier --write \"src/**/*.{js,jsx}\"",
        "prepare": "cd .. && husky install frontend/.husky"
    },
    "eslintConfig": {
        "extends": [
            "react-app",
            "react-app/jest"
        ]
    },
    "jest": {
        "collectCoverageFrom": [
            "src/**/*.{js,jsx}",
            "!src/index.js",
            "!src/reportWebVitals.js",
            "!src/**/*.stories.js"
        ],
        "coverageThreshold": {
            "global": {
                "statements": 80,
                "branches": 70,
                "functions": 80,
                "lines": 80
            }
        }
    },
    "browserslist": {
        "production": [
            ">0.2%",
            "not dead",
            "not op_mini all"
        ],
        "development": [
            "last 1 chrome version",
            "last 1 firefox version",
            "last 1 safari version"
        ]
    },
    "devDependencies": {
        "@testing-library/react-hooks": "^8.0.1",
        "eslint": "8.56.0",
        "eslint-config-prettier": "9.1.0",
        "husky": "8.0.3",
        "jest-junit": "^16.0.0",
        "lint-staged": "15.2.0",
        "prettier": "3.2.4",
        "react-test-renderer": "^18.2.0"
    },
    "lint-staged": {
        "src/**/*.{js,jsx}": [
            "eslint --fix",
            "prettier --write"
        ]
    },
    "proxy": "http://localhost:3000"
}
