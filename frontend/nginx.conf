server {
    listen 80;
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/javascript
        application/json
        application/x-javascript
        text/css
        text/javascript
        text/plain;

    # Add cache control for static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        access_log off;
    }

    # Setup proxy cache
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=apicache:10m max_size=100m inactive=60m;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_valid 200 302 10m;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

    # Enable debug logging
    error_log /var/log/nginx/error.log debug;

    # Serve static files
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Forward specific API route requests to the backend
    location /map/roulette {
        proxy_pass http://backend:3000/api/v1/map/roulette;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_cache apicache;
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Forward other map API requests to the backend
    location /map/ {
        proxy_pass http://backend:3000/api/v1/map/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_cache apicache;
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Forward cache API requests to the backend
    location /api/cache/ {
        proxy_pass http://backend:3000/api/v1/cache/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Forward Swagger documentation requests to the backend
    location /swagger/ {
        proxy_pass http://backend:3000/swagger/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
