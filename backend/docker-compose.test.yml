services:
  test:
    image: golang:1.24-alpine
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - GO_ENV=test
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        apk add --no-cache make git ca-certificates tzdata gcc musl-dev bash &&
        update-ca-certificates &&
        go mod download &&
        make test-all

  test-unit:
    image: golang:1.24-alpine
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - GO_ENV=test
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        apk add --no-cache make git ca-certificates tzdata gcc musl-dev bash &&
        update-ca-certificates &&
        go mod download &&
        make test-unit

  test-coverage:
    image: golang:1.24-alpine
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - GO_ENV=test
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        apk add --no-cache make git ca-certificates tzdata gcc musl-dev bash &&
        update-ca-certificates &&
        go mod download &&
        make test-coverage

  test-benchmark:
    image: golang:1.24-alpine
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - GO_ENV=test
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        apk add --no-cache make git ca-certificates tzdata gcc musl-dev bash &&
        update-ca-certificates &&
        go mod download &&
        make test-benchmark

  test-race:
    image: golang:1.24-alpine
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - GO_ENV=test
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        apk add --no-cache make git ca-certificates tzdata gcc musl-dev bash &&
        update-ca-certificates &&
        go mod download &&
        make test-race
